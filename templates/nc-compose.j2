version: '3.7'

services:
  nextcloud-db:
    container_name: nextcloud-db
    image: 'mariadb'
    command: --transaction-isolation=READ-COMMITTED --log-bin=mysqld-bin  --binlog-format=ROW --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-buffer-pool-size=1024M --innodb-log-file-size=256M --table-definition-cache=128M --tmp-table-size=128M --max-heap-table-size=128M --join-buffer-size=512K --performance-schema=1 --slow-query-log=1 --slow-query-log-file=slow.log
    restart: unless-stopped
    volumes:
      - '{{ path_nc }}/mysql/:/var/lib/mysql'
    environment:
      - MYSQL_ROOT_PASSWORD={{ mysql_root_password }}
      - MYSQL_PASSWORD={{ mysql_password }}
      - MYSQL_DATABASE={{ mysql_database }}
      - MYSQL_USER={{ mysql_user }} 
      healthcheck:
      test: mysql --user={{mysql_user}} --password={{mysql_root_password}} {{mysql_database}} --execute "show tables"
      interval: "1m"
      timeout: "3s"
      start_period: "1m"
      retries: "3"

  nextcloud-redis:
    container_name: nextcloud-redis
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  app-server:
    container_name: app-server
    build: {{ docker_dir }}
    user: root 
    stdin_open: true
    tty: true
    restart: unless-stopped
    expose:
      - '80'
      - '9000'
    volumes:
      - '{{ path_nc }}/nextcloud/app_data/:/var/www/html/'
      - '{{ path_nc }}/supervisord/:/var/log/supervisord/'
    depends_on:
      nextcloud-db:
        condition: service_healthy
      nextcloud-redis:
        condition: service_healthy
  onlyoffice-document-server:
    container_name: onlyoffice-document-server
    image: onlyoffice/documentserver:latest
    stdin_open: true
    tty: true
    restart: always
    expose:
      - '80'
      - '443'
    volumes:
      - '{{ path_nc }}/onlyoffice/document_data:/var/www/onlyoffice/Data'
      - '{{ path_nc }}/onlyoffice/document_log:/var/log/onlyoffice'
      - '{{ path_nc }}/onlyoffice/logs:/var/log/onlyoffice'
      - '{{ path_nc }}/onlyoffice/data:/var/www/onlyoffice/Data'
      - '{{ path_nc }}/onlyoffice/lib:/var/lib/onlyoffice'
      - '{{ path_nc }}/onlyoffice/rabbitmq:/var/lib/rabbitmq'
      - '{{ path_nc }}/onlyoffice/redis:/var/lib/redis'
      - '{{ path_nc }}/onlyoffice/db:/var/lib/postgresql'
  nginx-server:
    container_name: nginx-server
    image: nginx
    stdin_open: true
    tty: true
    restart: always
    ports:
      - {{ nextcloud_port }}:80
      - 10006:443
    volumes:
      - '{{ docker_dir }}/docker-nginx.conf:/etc/nginx/nginx.conf:z'
      - '{{ path_nc  }}/nextcloud/app_data/:/var/www/html/:z'
    depends_on:
      - app-server
      - onlyoffice-document-server
  # Watchtower detects if any linked containers have an new image
  # available, automatically updating & restarting them if needed.
  #nextcloud-watchtower:
  #  container_name: nextcloud-watchtower
  #  # https://hub.docker.com/r/centurylink/watchtower/
  #  image: containrrr/watchtower:latest
  #  # https://github.com/v2tec/watchtower#options
  #  # This schedule applies updates (if available) at midnight.
  #  command: --cleanup --schedule "0 0 0 * * *"
  #  restart: always
  #  volumes:
  #    - '/var/run/docker.sock:/var/run/docker.sock:z'
